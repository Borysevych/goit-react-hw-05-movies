{"version":3,"file":"static/js/13.42d5df5d.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,qDASjBC,EAAa,mCAAG,WAAMC,GAAN,8EAC3BC,QAAQC,IAAI,gBAAiBF,GADF,SAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,GAAM,CAC/CL,OAAQ,CACNC,QAASJ,KAJc,cAErBK,EAFqB,yBAOpBA,EAASC,MAPW,2CAAH,sDAUbK,EAAY,mCAAG,WAAMH,GAAN,8EAC1BC,QAAQC,IAAIF,GADc,SAEHP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAkC,CACvDL,OAAQ,CACNC,QAASJ,KAJa,cAEpBK,EAFoB,yBAOnBA,EAASC,KAAKM,MAPK,2CAAH,sDAUZC,EAAe,mCAAG,WAAML,GAAN,8EAC7BC,QAAQC,IAAIF,GADiB,SAENP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,YAAkC,CACvDL,OAAQ,CACNC,QAASJ,KAJgB,cAEvBK,EAFuB,yBAOtBA,EAASC,KAAKQ,SAPQ,2CAAH,sDAUfC,EAAc,mCAAG,WAAMC,GAAN,8EAC5BP,QAAQC,IAAIM,GADgB,SAELf,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTiB,MAAOD,KALiB,cAEtBX,EAFsB,yBAQrBA,EAASC,MARY,2CAAH,qD,6ECN3B,UAlCqB,WACnB,OAAsCY,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBQ,GACbG,MAAK,SAAAlB,GACJc,EAAed,EAChB,IACAmB,MAAMhB,QAAQC,IAClB,GAAE,CAACW,IAECF,EAIL,OACE,8BACGA,EAAYO,OAAS,GACpB,wBACGP,EAAYQ,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,sCACU,uBAAID,KACZ,uBAAIC,MAFGrB,EADM,OAQnB,gDAIP,C","sources":["components/fetchAPI.js","page/reviewsMovie/ReviewsMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2a9f3f1884aca3d0f8736b654da9b9f1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMoviesById = async id => {\n  console.log('getMoviesById', id);\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  console.log(id);\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  console.log(id);\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getSearchQuery = async searchQuery => {\n  console.log(searchQuery);\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data;\n};","import { getMovieReviews } from 'components/fetchAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsMovie = () => {\n  const [reviewMovie, setReviewMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setReviewMovie(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!reviewMovie) {\n    return;\n  }\n\n  return (\n    <>\n      {reviewMovie.length > 0 ? (\n        <ul>\n          {reviewMovie.map(({ id, author, content }) => (\n            <li key={id}>\n              Author: <b>{author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>Reviews not found</div>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsMovie;"],"names":["API_KEY","axios","getTrendingMovies","params","api_key","response","data","getMoviesById","id","console","log","getMovieCast","cast","getMovieReviews","results","getSearchQuery","searchQuery","query","useState","reviewMovie","setReviewMovie","movieId","useParams","useEffect","then","catch","length","map","author","content"],"sourceRoot":""}